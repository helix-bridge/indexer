type Block @jsonField {
  number: Int!
  specVersion: Int!
  blockHash: String!
  extrinsicHash: String!
}

type TransferRecord @entity {
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: String!
  start_timestamp: Date!
  transaction_hash: Bytes!
  fee: String

  withdraw_timestamp: Date
  withdraw_amount: BigInt
  withdraw_transaction: Bytes
}

type RefundTransferRecord @entity {
  id: ID! # refund id
  source_id: String
  timestamp: Date
  transaction_hash: Bytes
}

type BridgeDispatchEvent @entity {
  id: ID!

  method: String!
  data: String!
  index: Int!
  timestamp: Date

  block: Block
}

type XcmSentEvent @entity {
  id: ID! # messageHash + index

  txHash: String!
  sender: String!
  recipient: String
  amount: String!
  timestamp: Int
  destChainId: Int
  token: String
  nonce: Int

  block: Block
}

type XcmReceivedEvent @entity {
  id: ID!
  txHash: String!
  recipient: String!
  amount: String!
  timestamp: Int

  block: Block
}

